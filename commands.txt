# Detailed Instructions for Applying Real-time Updates Fix on the Server

## 1. Transfer the simple-fix.js file to your server

Use SCP to transfer the simple-fix.js file to your server:

```bash
scp simple-fix.js root@104-245-241-185:/var/www/coveredamerican.com/audio/
```

## 2. SSH into your server

```bash
ssh root@104-245-241-185
```

## 3. Navigate to your application directory

```bash
cd /var/www/coveredamerican.com/audio
```

## 4. Create a backup of the original app.js file

```bash
cp public/app.js public/app.js.backup-$(date +%s)
```

## 5. Run the simple-fix.js script

```bash
node simple-fix.js
```

You should see output confirming the changes were applied successfully.

## 6. Restart your server using PM2

```bash
pm2 restart call-info-remover
```

## 7. Verify the changes were applied

Check the server logs to confirm the server started without errors:

```bash
pm2 logs call-info-remover --lines 20
```

You should see the normal startup messages without any errors.

## 8. Test the real-time updates

1. Open your application in a web browser
2. Upload multiple audio files
3. Verify that each file appears in the processed recordings list as soon as it's processed, without waiting for all files to complete

## 9. Check the browser console for logs

Open your browser's developer tools (F12) and check the console for the new log messages:
- "Fetching recordings list..."
- "Received X recordings"

These logs will confirm that the recordings list is being updated after each file is processed.

## 10. If you need to revert the changes

If something goes wrong, you can restore the backup:

```bash
# Find your backup file
ls -la public/app.js.backup-*

# Restore the backup
cp public/app.js.backup-[timestamp] public/app.js

# Restart the server
pm2 restart call-info-remover
```

## 11. Monitoring for issues

If you encounter any issues, check the server logs:

```bash
pm2 logs call-info-remover
```

Look for any JavaScript errors related to the app.js file or the fetchRecordings function.

## Additional Notes

- The fix only modifies the frontend code (public/app.js), not the server-side code
- The changes are minimal and focused on the specific issue of real-time updates
- The backup file created by the script provides a safety net if you need to revert